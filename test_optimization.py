#!/usr/bin/env python3
"""
–¢–µ—Å—Ç–æ–≤—ã–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è —Å–∏—Å—Ç–µ–º—ã –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–π –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–∏ Ollama
"""

import logging
import sys
import os

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(
    level=logging.INFO,
    format='%(asctime)s - %(levelname)s - %(message)s',
    stream=sys.stdout
)

def test_system_detection():
    """–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è —Å–∏—Å—Ç–µ–º–Ω—ã—Ö —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫"""
    try:
        from system_optimizer import SystemDetector, OllamaOptimizer

        print("=== –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï –û–ü–†–ï–î–ï–õ–ï–ù–ò–Ø –°–ò–°–¢–ï–ú–´ ===")

        detector = SystemDetector()
        system_info = detector.system_info

        print(f"–ü–ª–∞—Ç—Ñ–æ—Ä–º–∞: {system_info.get('platform', '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ')}")
        print(f"–ü—Ä–æ—Ü–µ—Å—Å–æ—Ä: {system_info.get('processor', '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ')}")
        print(f"–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —è–¥–µ—Ä CPU: {system_info.get('cpu_count', '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ')}")
        print(f"–û–±—ä–µ–º –ø–∞–º—è—Ç–∏: {system_info.get('memory_gb', '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ')} –ì–ë")
        print(f"–ê—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–∞: {system_info.get('architecture', '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ')}")
        print(f"GPU: {system_info.get('gpu', '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ')}")
        print(f"–ü–∞–º—è—Ç—å GPU: {system_info.get('gpu_memory_gb', '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ')} –ì–ë")
        print(f"–¢–∏–ø GPU: {system_info.get('gpu_type', '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ')}")

        return True

    except Exception as e:
        print(f"–û—à–∏–±–∫–∞ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è —Å–∏—Å—Ç–µ–º—ã: {e}")
        return False

def test_optimization():
    """–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–∏—Å—Ç–µ–º—ã –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–∏"""
    try:
        from system_optimizer import OllamaOptimizer

        print("\n=== –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï –û–ü–¢–ò–ú–ò–ó–ê–¶–ò–ò ===")

        optimizer = OllamaOptimizer()
        settings = optimizer.get_optimal_settings()

        print("–°–µ—Ä–≤–µ—Ä–Ω—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏:")
        for key, value in settings.get('server', {}).items():
            print(f"  {key} = {value}")

        print("\nRuntime –Ω–∞—Å—Ç—Ä–æ–π–∫–∏:")
        for key, value in settings.get('runtime', {}).items():
            print(f"  {key} = {value}")

        print("\n–ù–∞—Å—Ç—Ä–æ–π–∫–∏ –º–æ–¥–µ–ª–∏:")
        for key, value in settings.get('model', {}).items():
            print(f"  {key} = {value}")

        return True

    except Exception as e:
        print(f"–û—à–∏–±–∫–∞ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–∏: {e}")
        return False

def test_config_save_load():
    """–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –∏ –∑–∞–≥—Ä—É–∑–∫–∏ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏"""
    try:
        from system_optimizer import OllamaOptimizer

        print("\n=== –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï –ö–û–ù–§–ò–ì–£–†–ê–¶–ò–ò ===")

        optimizer = OllamaOptimizer()
        settings = optimizer.get_optimal_settings()

        # –°–æ—Ö—Ä–∞–Ω—è–µ–º –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é
        config_file = 'test_ollama_config.json'
        if optimizer.save_config(settings, config_file):
            print(f"–ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∞ –≤ {config_file}")

            # –ó–∞–≥—Ä—É–∂–∞–µ–º –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é
            loaded_settings = optimizer.load_config(config_file)
            if loaded_settings:
                print("–ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è —É—Å–ø–µ—à–Ω–æ –∑–∞–≥—Ä—É–∂–µ–Ω–∞")
                print(f"–ó–∞–≥—Ä—É–∂–µ–Ω–æ –Ω–∞—Å—Ç—Ä–æ–µ–∫: {len(loaded_settings)} –∫–∞—Ç–µ–≥–æ—Ä–∏–π")

                # –û—á–∏—â–∞–µ–º —Ç–µ—Å—Ç–æ–≤—ã–π —Ñ–∞–π–ª
                try:
                    os.remove(config_file)
                    print("–¢–µ—Å—Ç–æ–≤—ã–π —Ñ–∞–π–ª –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ —É–¥–∞–ª–µ–Ω")
                except:
                    pass

                return True
            else:
                print("–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏")
                return False
        else:
            print("–û—à–∏–±–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏")
            return False

    except Exception as e:
        print(f"–û—à–∏–±–∫–∞ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏: {e}")
        return False

def test_api_integration():
    """–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏ —Å API"""
    try:
        from ollama_api import OllamaAPI

        print("\n=== –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï –ò–ù–¢–ï–ì–†–ê–¶–ò–ò –° API ===")

        # –°–æ–∑–¥–∞–µ–º API —Å –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–µ–π
        api = OllamaAPI()

        # –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ–± –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–∏
        optimization_info = api.get_optimization_info()

        print("–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ–± –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–∏ –ø–æ–ª—É—á–µ–Ω–∞:")
        print(f"–°–∏—Å—Ç–µ–º–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è: {len(optimization_info.get('system_info', {}))} –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤")
        print(f"–°–µ—Ä–≤–µ—Ä–Ω—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏: {len(optimization_info.get('optimal_settings', {}).get('server', {}))} –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤")
        print(f"Runtime –Ω–∞—Å—Ç—Ä–æ–π–∫–∏: {len(optimization_info.get('default_runtime_settings', {}))} –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤")
        print(f"–ù–∞—Å—Ç—Ä–æ–π–∫–∏ –º–æ–¥–µ–ª–∏: {len(optimization_info.get('default_model_settings', {}))} –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤")

        return True

    except Exception as e:
        print(f"–û—à–∏–±–∫–∞ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏ —Å API: {e}")
        return False

def test_settings_synchronization():
    """–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏—Ö –Ω–∞—Å—Ç—Ä–æ–µ–∫"""
    try:
        from ollama_api import OllamaAPI

        print("\n=== –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï –°–ò–ù–•–†–û–ù–ò–ó–ê–¶–ò–ò –ù–ê–°–¢–†–û–ï–ö ===")

        # –°–æ–∑–¥–∞–µ–º API —Å –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–µ–π
        api = OllamaAPI()

        # –¢–µ—Å—Ç–æ–≤—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
        user_settings = {
            'temperature': 0.5,
            'num_thread': 4,
            'num_ctx': 1024,
            'top_k': 50
        }

        print(f"–¢–µ—Å—Ç–æ–≤—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏: {user_settings}")

        # –°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∏—Ä—É–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
        sync_result = api.sync_with_user_settings(user_settings)

        print("–†–µ–∑—É–ª—å—Ç–∞—Ç —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏:")
        print(f"–¢—Ä–µ–±—É–µ—Ç—Å—è –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫: {sync_result.get('needs_restart', False)}")
        print(f"–ò–∑–º–µ–Ω–µ–Ω–Ω—ã–µ –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∏–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã: {sync_result.get('critical_params_changed', [])}")

        # –ü–æ–ª—É—á–∞–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
        current_settings = api.get_current_settings()
        runtime_settings = current_settings.get('runtime_settings', {})

        print("–ü—Ä–æ–≤–µ—Ä–∫–∞ –ø—Ä–∏–º–µ–Ω–µ–Ω–∏—è –Ω–∞—Å—Ç—Ä–æ–µ–∫:")
        for key, expected_value in user_settings.items():
            actual_value = runtime_settings.get(key)
            if actual_value == expected_value:
                print(f"‚úÖ {key}: {actual_value} (–æ–∂–∏–¥–∞–µ–º–æ–µ: {expected_value})")
            else:
                print(f"‚ùå {key}: {actual_value} (–æ–∂–∏–¥–∞–µ–º–æ–µ: {expected_value})")

        return True

    except Exception as e:
        print(f"–û—à–∏–±–∫–∞ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏ –Ω–∞—Å—Ç—Ä–æ–µ–∫: {e}")
        return False

def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è"""
    print("üöÄ –ù–ê–ß–ê–õ–û –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–Ø –°–ò–°–¢–ï–ú–´ –ê–í–¢–û–ú–ê–¢–ò–ß–ï–°–ö–û–ô –û–ü–¢–ò–ú–ò–ó–ê–¶–ò–ò OLLAMA")
    print("=" * 70)

    tests = [
        ("–û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ —Å–∏—Å—Ç–µ–º—ã", test_system_detection),
        ("–°–∏—Å—Ç–µ–º–∞ –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–∏", test_optimization),
        ("–ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è", test_config_save_load),
        ("–ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è —Å API", test_api_integration),
        ("–°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è –Ω–∞—Å—Ç—Ä–æ–µ–∫", test_settings_synchronization)
    ]

    passed = 0
    total = len(tests)

    for test_name, test_func in tests:
        try:
            if test_func():
                print(f"‚úÖ {test_name}: –ü–†–û–ô–î–ï–ù")
                passed += 1
            else:
                print(f"‚ùå {test_name}: –ü–†–û–í–ê–õ–ï–ù")
        except Exception as e:
            print(f"‚ùå {test_name}: –û–®–ò–ë–ö–ê - {e}")

    print("\n" + "=" * 70)
    print(f"–†–ï–ó–£–õ–¨–¢–ê–¢–´ –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–Ø: {passed}/{total} –ø—Ä–æ–π–¥–µ–Ω–æ")

    if passed == total:
        print("üéâ –í–°–ï –¢–ï–°–¢–´ –ü–†–û–ô–î–ï–ù–´ –£–°–ü–ï–®–ù–û!")
        print("\n–°–∏—Å—Ç–µ–º–∞ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–π –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–∏ Ollama –≥–æ—Ç–æ–≤–∞ –∫ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é:")
        print("‚Ä¢ –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫ —Å–∏—Å—Ç–µ–º—ã")
        print("‚Ä¢ –û–ø—Ç–∏–º–∞–ª—å–Ω—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –¥–ª—è –≤–∞—à–µ–≥–æ –æ–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏—è")
        print("‚Ä¢ –ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è —Å API –¥–ª—è runtime –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–∏")
        print("‚Ä¢ –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –∏ –∑–∞–≥—Ä—É–∑–∫–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏")
        return 0
    else:
        print("‚ö†Ô∏è  –ù–ï–ö–û–¢–û–†–´–ï –¢–ï–°–¢–´ –ü–†–û–í–ê–õ–ï–ù–´")
        print("–ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ª–æ–≥–∏ –æ—à–∏–±–æ–∫ –≤—ã—à–µ –∏ –ø–æ–≤—Ç–æ—Ä–∏—Ç–µ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ")
        return 1

if __name__ == "__main__":
    sys.exit(main())